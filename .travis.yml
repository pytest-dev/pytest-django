# Use container-based environment (faster startup, allows caches).
sudo: false
language: python
python:
  - "3.5"
env:
  - TESTENV=pypy-3.0.3-1.10-sqlite_file
  - TESTENV=pypy3-2.9.2-1.8-sqlite_file
  - TESTENV=pypy3-3.0.3-1.8-sqlite
  - TESTENV=pypy3-3.0.3-1.8-sqlite_file
  - TESTENV=python2.7-3.0.3-1.10-mysql_innodb
  - TESTENV=python2.7-3.0.3-1.10-mysql_myisam
  - TESTENV=python2.7-3.0.3-1.10-postgres
  - TESTENV=python2.7-3.0.3-1.7-postgres
  - TESTENV=python2.7-3.0.3-1.8-postgres
  - TESTENV=python2.7-3.0.3-1.9-postgres
  - TESTENV=python2.7-3.0.3-master-postgres
  - TESTENV=python3.3-3.0.3-1.8-postgres
  - TESTENV=python3.4-3.0.3-1.10-postgres
  - TESTENV=python3.5-3.0.3-1.10-postgres
  - TESTENV=python3.5-3.0.3-1.8-postgres
  - TESTENV=python3.5-3.0.3-1.9-postgres
  - TESTENV=python3.5-3.0.3-master-postgres
  - TESTENV=checkqa-python2.7
  - TESTENV=checkqa-python3.5
matrix:
  allow_failures:
    - env: TESTENV=python2.7-3.0.3-master-postgres
    - env: TESTENV=python3.5-3.0.3-master-postgres
install:
  # Create pip wrapper script, using travis_retry (a function) and
  # inject it into tox.ini.
  - mkdir -p bin
  - PATH=$PWD/bin:$PATH
  - printf '#!/bin/sh\n' > bin/travis_retry_pip
  - declare -f travis_retry >> bin/travis_retry_pip
  - printf '\necho "Using pip-wrapper.." >&2\ntravis_retry pip "$@"' >> bin/travis_retry_pip
  - chmod +x bin/travis_retry_pip
  - sed -i.bak 's/^\[testenv\]/\0\ninstall_command = travis_retry_pip install {opts} {packages}/' tox.ini
  - diff tox.ini tox.ini.bak && return 1 || true
  - sed -i.bak 's/whitelist_externals =/\0\n    travis_retry_pip/' tox.ini
  - diff tox.ini tox.ini.bak && return 1 || true

  - pip install tox==2.3.1
script: tox -e $TESTENV