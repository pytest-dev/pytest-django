sudo: false
language: python
dist: trusty

jobs:
  fast_finish: true
  include:
    # py37 is not available in trusty dist, and requires sudo=true with xenial.
    - stage: test
      python: 3.7
      env: TOXENV=py37-dj21-sqlite
      dist: xenial
      sudo: true

    - python: 3.6
      env: TOXENV=py36-djmaster-sqlite
    - python: 3.6
      env: TOXENV=py36-dj20-postgres
    - python: 3.6
      env: TOXENV=py36-dj111-sqlite

    - python: 3.5
      env: TOXENV=py35-dj110-postgres

    - python: 3.4
      env: TOXENV=py34-dj19-sqlite_file

    - python: 2.7
      env: TOXENV=py27-dj111-mysql_innodb
    - python: 2.7
      env: TOXENV=py27-dj111-mysql_myisam
    - python: 2.7
      env: TOXENV=py27-dj18-postgres

    # pypy/pypy3: not included with coverage reports (much slower then).
    - python: pypy
      env: TOXENV=pypy-dj111-sqlite_file SKIP_COVERAGE=1
    - python: pypy3
      env: TOXENV=pypy3-dj110-sqlite SKIP_COVERAGE=1

    - python: 3.6
      env: TOXENV=checkqa,docs SKIP_COVERAGE=1

    - stage: test_release
      python: 3.6
      env: TOXENV=py36-dj20-postgres SKIP_COVERAGE=1

    - stage: release
      script: skip
      install: skip
      after_success: true
      deploy:
        provider: pypi
        user: blueyed
        password:
          secure: "FY7qbX/N0XRcH8hVk00SsQWvNIkuxKvY7Br4ghRnHvleHG3YulJ7WbJnik+9eoBGeMfJeNyzBfVjpeo1ZIq9IZBiyTdNfG/sZFsC5LOoG/CPxPH3nD9JktI2HoBMnlSbGg/MMHjY+wXuOY647U/3qNedcnQmGztYt6QWi5DRxu8="
        on:
          tags: true
        distributions: "sdist bdist_wheel"

  # NOTE: does not show up in "allowed failures" section, but is allowed to
  # fail (for the "test" stage).
  allow_failures:
    - env: TOXENV=py36-djmaster-sqlite

stages:
  - name: test
    if: tag IS NOT present
  - name: test_release
    if: tag IS present
  - name: release
    if: tag IS present

install:
  - pip install tox==3.3.0
  - |
    # Setup coverage tracking.
    if [[ "$SKIP_COVERAGE" != "1" ]]; then
      PYTEST_DJANGO_COVERAGE=1
      export PYTEST_ADDOPTS='--cov=pytest_django --cov=tests --cov=pytest_django_test --cov-report=term-missing:skip-covered'
      export _PYTESTDJANGO_TOX_EXTRA_DEPS=pytest-cov
    else
      PYTEST_DJANGO_COVERAGE=0
    fi

script:
  - tox

after_success:
  - |
    set -ex
    if [[ "$PYTEST_DJANGO_COVERAGE" = 1 ]]; then
      pip install codecov

      coverage --version
      coverage combine
      coverage xml

      codecov_flags=${TOXENV//./}
      codecov_flags=${codecov_flags//-/ }
      codecov --required -X search gcov pycov -f coverage.xml --flags $codecov_flags
    fi
    set +x
