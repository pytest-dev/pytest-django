[build-system]
requires = [
    "setuptools>=61.0.0",
    "setuptools-scm[toml]>=5.0.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "pytest-django"
description = "A Django plugin for pytest."
readme = "README.rst"
requires-python = ">=3.9"
dynamic = ["version"]
authors = [
    { name = "Andreas Pelme", email = "andreas@pelme.se" },
]
maintainers = [
    { name = "Andreas Pelme", email = "andreas@pelme.se" },
]
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.1",
    "Framework :: Django :: 5.2",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Software Development :: Testing",
]
dependencies = [
    "pytest>=7.0.0",
]
[dependency-groups]
docs = [
    "sphinx",
    "sphinx_rtd_theme",
]
testing = [
    "Django",
    "django-configurations>=2.0",
]
coverage = [
    "coverage[toml]",
    "coverage-enable-subprocess",
]
postgres = [
    "psycopg[binary]",
]
mysql = [
    "mysqlclient==2.2.7",
]
xdist = [
    "pytest-xdist",
]
linting = [
    "editorconfig-checker==3.2.1",
    "mypy==1.17.1",
    "ruff==0.12.8",
    "zizmor==1.11.0",
]
[project.urls]
Documentation = "https://pytest-django.readthedocs.io/"
Repository = "https://github.com/pytest-dev/pytest-django"
Changelog = "https://pytest-django.readthedocs.io/en/latest/changelog.html"
[project.entry-points.pytest11]
django = "pytest_django.plugin"

[tool.setuptools]
packages = ["pytest_django"]
[tool.setuptools.package-data]
pytest_django = ["py.typed"]

[tool.setuptools_scm]
write_to = "pytest_django/_version.py"

[tool.pytest.ini_options]
addopts = [
    # Error on using unregistered marker.
    "--strict-markers",
    # Show extra test summary info for everything.
    "-ra",
]
pythonpath = ["."]
DJANGO_SETTINGS_MODULE = "pytest_django_test.settings_sqlite_file"
testpaths = ["tests"]
markers = ["tag1", "tag2", "tag3", "tag4", "tag5"]

[tool.mypy]
strict = true
disallow_incomplete_defs = false
disallow_untyped_defs = false
disallow_subclassing_any = false
files = [
    "pytest_django",
    "pytest_django_test",
    "tests",
]
[[tool.mypy.overrides]]
module = [
    "django.*",
    "configurations.*",
]
ignore_missing_imports = true

[tool.coverage.run]
parallel = true
source = ["${PYTESTDJANGO_COVERAGE_SRC}."]
branch = true
[tool.coverage.report]
include = [
    "pytest_django/*",
    "pytest_django_test/*",
    "tests/*",
]
skip_covered = true
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
]

[tool.ruff]
line-length = 99
extend-exclude = [
    "pytest_django/_version.py",
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    # "D203",
    # "D212",
    # "COM812",
    "PLR0913",  # Too many arguments in function definition
    "PLR2004",  # Magic value used in comparison, consider replacing 3 with a constant variable
]
[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
    "ANN",    # Disable all annotations
    "D100",   # Missing docstring in public module
    "D101",   # Missing docstring in public class
    "D205",   # 1 blank line required between summary line and description
    "D102",   # Missing docstring in public method
    "D103",   # Missing docstring in public function
    "D401",   # First line of docstring should be in imperative mood
    "D404",   # First word of the docstring should not be "This"
    "FIX003", # Line contains XXX, consider resolving the issue
    "N801",   # Class name should use CapWords convention
    "N802",   # Function name should be lowercase
    "S",      # Disable all security checks
    "TD001",  # Invalid TODO tag
    "TD002",  # Missing author in TODO
    "TD003",  # Missing issue link for this TODO

    "D400",   # First line should end with a period
    "D415",   # First line should end with a period, question mark, or exclamation points
]

[tool.ruff.lint.isort]
forced-separate = [
    "tests",
    "pytest_django",
    "pytest_django_test",
]
combine-as-imports = true
split-on-trailing-comma = false
lines-after-imports = 2
