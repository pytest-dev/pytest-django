# Use container-based environment (faster startup, allows caches).
sudo: false
language: python

matrix:
  fast_finish: true
  include:

    - python: 3.5
      env: TOXENV=py35-pytest30-djangomaster-postgres
    - python: 3.5
      env: TOXENV=py35-pytest30-django1.10-postgres
    - python: 3.5
      env: TOXENV=py35-pytest30-django1.9-postgres
    - python: 3.5
      env: TOXENV=py35-pytest30-django1.8-postgres
    - python: 3.5
      env: TOXENV=py35-checkqa

    - python: 3.4
      env: TOXENV=py34-pytest30-django1.10-postgres

    - python: 3.3
      env: TOXENV=py34-pytest30-django1.8-postgres

    - python: 2.7
      env: TOXENV=py27-pytest30-djangomaster-postgres
    - python: 2.7
      env: TOXENV=py27-pytest30-django1.10-mysql_innodb
    - python: 2.7
      env: TOXENV=py27-pytest30-django1.10-mysql_myisam
    - python: 2.7
      env: TOXENV=py27-pytest30-django1.10-postgres
    - python: 2.7
      env: TOXENV=py27-pytest30-django1.9-postgres
    - python: 2.7
      env: TOXENV=py27-pytest30-django1.8-postgres
    - python: 2.7
      env: TOXENV=py27-pytest30-django1.7-postgres
    - python: 2.7
      env: TOXENV=py27-checkqa

    - python: pypy3
      env: TOXENV=pypy3-pytest29-django1.8-sqlite_file
    - python: pypy3
      env: TOXENV=pypy3-pytest30-django1.8-sqlite
    - python: pypy3
      env: TOXENV=pypy3-pytest30-django1.8-sqlite_file

    - python: pypy
      env: TOXENV=pypy-pytest30-django1.10-sqlite_file

  allow_failures:
    - env: TOXENV=py27-pytest30-djangomaster-postgres
    - env: TOXENV=py35-pytest30-djangomaster-postgres

cache:
  directories:
    - "${TRAVIS_BUILD_DIR}/.tox"

install:
  # Create pip wrapper script, using travis_retry (a function) and
  # inject it into tox.ini.
  - mkdir -p bin
  - PATH=$PWD/bin:$PATH
  - printf '#!/bin/sh\n' > bin/travis_retry_pip
  - declare -f travis_retry >> bin/travis_retry_pip
  - printf '\necho "Using pip-wrapper.." >&2\ntravis_retry pip "$@"' >> bin/travis_retry_pip
  - chmod +x bin/travis_retry_pip
  - sed -i.bak 's/^\[testenv\]/\0\ninstall_command = travis_retry_pip install {opts} {packages}/' tox.ini
  - diff tox.ini tox.ini.bak && return 1 || true
  - sed -i.bak 's/whitelist_externals =/\0\n    travis_retry_pip/' tox.ini
  - diff tox.ini tox.ini.bak && return 1 || true

  - pip install tox==2.3.1

script:
  - tox
  - "find ${TRAVIS_BUILD_DIR}/.tox -name 'log' -o -name '__pycache__' -type d | xargs -I {} rm -rf {}"
