[build-system]
requires = [
  "setuptools>=45.0",
  # sync with setup.cfg until we discard non-pep-517/518
  "setuptools-scm[toml]>=5.0.0",
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "pytest_django/_version.py"

[tool.pytest.ini_options]
addopts = [
    # Error on using unregistered marker.
    "--strict-markers",
    # Show extra test summary info for everything.
    "-ra",
]
DJANGO_SETTINGS_MODULE = "pytest_django_test.settings_sqlite_file"
testpaths = ["tests"]
markers = ["tag1", "tag2", "tag3", "tag4", "tag5"]

[tool.mypy]
strict = true
disallow_incomplete_defs = false
disallow_untyped_defs = false
disallow_subclassing_any = false
files = [
    "pytest_django",
    "pytest_django_test",
    "tests",
]
[[tool.mypy.overrides]]
module = [
    "django.*",
    "configurations.*",
    "psycopg2cffi.*",
]
ignore_missing_imports = true

[tool.coverage.run]
parallel = true
source = ["${PYTESTDJANGO_COVERAGE_SRC}."]
branch = true
[tool.coverage.report]
include = [
    "pytest_django/*",
    "pytest_django_test/*",
    "tests/*",
]
skip_covered = true
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
]

[tool.ruff]
target-version = "py38"
line-length = 99
extend-exclude = [
    "pytest_django/_version.py",
]

[tool.ruff.lint]
extend-select = [
    "B",     # flake8-bugbear
    "BLE",   # flake8-blind-except
    "DTZ",   # flake8-datetimez
    "FA",    # flake8-future-annotations
    "G",     # flake8-logging-format
    "I",     # isort
    "PGH",   # pygrep-hooks
    "PIE",   # flake8-pie
    "PL",    # pylint
    "PT",    # flake8-pytest-style
    "PYI",   # flake8-pyi
    "RUF",   # Ruff-specific rules
    "SLOT",  # flake8-slots
    "T10",   # flake8-debugger
    "UP",    # pyupgrade
    "YTT",   # flake8-2020
]
ignore = [
    "PLR0913",  # Too many arguments in function definition
    "PLR2004",  # Magic value used in comparison, consider replacing 3 with a constant variable
    "PT001",    # Use `@pytest.fixture()` over `@pytest.fixture`
    "PT004",    # Fixture `fixture_with_db` does not return anything, add leading underscore
    "PT023",    # Use `@pytest.mark.django_db()` over `@pytest.mark.django_db`
]

[tool.ruff.isort]
forced-separate = [
    "tests",
    "pytest_django",
    "pytest_django_test",
]
combine-as-imports = true
split-on-trailing-comma = false
lines-after-imports = 2
