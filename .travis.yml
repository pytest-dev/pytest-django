# Use container-based environment (faster startup, allows caches).
sudo: false
language: python

matrix:
  fast_finish: true
  include:
    - python: 3.6
      env: TOXENV=py36-djmaster-postgres
    - python: 3.6
      env: TOXENV=py36-dj20-postgres
    - python: 3.6
      env: TOXENV=py36-dj111-postgres
    - python: 3.6
      env: TOXENV=py36-checkqa

    - python: 3.5
      env: TOXENV=py35-dj110-postgres

    - python: 3.4
      env: TOXENV=py34-dj19-postgres

    - python: 2.7
      env: TOXENV=py27-dj111-mysql_innodb
    - python: 2.7
      env: TOXENV=py27-dj111-mysql_myisam
    - python: 2.7
      env: TOXENV=py27-dj18-postgres
    - python: 2.7
      env: TOXENV=py27-checkqa

    - python: pypy
      env: TOXENV=pypy-dj111-sqlite_file

    - python: pypy3
      env: TOXENV=pypy3-dj110-sqlite

  allow_failures:
    - env: TOXENV=py36-djmaster-postgres

cache:
  directories:
    - "${TRAVIS_BUILD_DIR}/.tox/${TOXENV}"

install:
  # Create pip wrapper script, using travis_retry (a function) and
  # inject it into tox.ini.
  - mkdir -p bin
  - PATH=$PWD/bin:$PATH
  - printf '#!/bin/sh\n' > bin/travis_retry_pip
  - declare -f travis_retry >> bin/travis_retry_pip
  - printf '\necho "Using pip-wrapper.." >&2\ntravis_retry pip "$@"' >> bin/travis_retry_pip
  - chmod +x bin/travis_retry_pip
  - sed -i.bak 's/^\[testenv\]/\0\nwhitelist_externals = travis_retry_pip\ninstall_command = travis_retry_pip install {opts} {packages}/' tox.ini
  - if diff tox.ini tox.ini.bak; then exit 1; fi

  - pip install tox==2.9.1
  - |
    if [[ "${TOXENV%-checkqa}" == "$TOXENV" ]]; then
      export PYTEST_ADDOPTS='--cov=pytest_django --cov=tests --cov=pytest_django_test --cov-report=term-missing:skip-covered'
      export _PYTESTDJANGO_TOX_EXTRA_DEPS=pytest-cov
    fi

script:
  - tox

after_success:
  - |
    set -ex
    if [[ "${TOXENV%-checkqa}" == "$TOXENV" ]]; then
      pip install codecov

      coverage combine
      coverage xml

      codecov_flags=${TOXENV//./}
      codecov_flags=${codecov_flags//-/ }
      codecov --required -X search gcov pycov -f coverage.xml --flags $codecov_flags
    fi
    set +x

before_cache:
  - "find ${TRAVIS_BUILD_DIR}/.tox/${TOXENV} -name 'log' -o -name '__pycache__' -type d | xargs -I {} rm -rf {}"
